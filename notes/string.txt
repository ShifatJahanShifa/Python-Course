*******String Reference Guide**************


In Python, there are a lot of things you can do with strings. In this guide, you’ll find the most common string operations and string methods.

String operations
len(string) - Returns the length of the string

for character in string - Iterates over each character in the string

if substring in string - Checks whether the substring is part of the string

string[i] - Accesses the character at index i of the string, starting at zero

string[i:j] - Accesses the substring starting at index i, ending at index j minus 1. If i is omitted, its value defaults to 0. If j is omitted, the value will default to len(string).

String methods
string.lower() - Returns a copy of the string with all lowercase characters

string.upper() - Returns a copy of the string with all uppercase characters

string.lstrip() - Returns a copy of the string with the left-side whitespace removed

string.rstrip() - Returns a copy of the string with the right-side whitespace removed

string.strip() - Returns a copy of the string with both the left and right-side whitespace removed

string.count(substring) - Returns the number of times substring is present in the string

string.isnumeric() - Returns True if there are only numeric characters in the string. If not, returns False.

string.isalpha() - Returns True if there are only alphabetic characters in the string. If not, returns False.

string.split() - Returns a list of substrings that were separated by whitespace (whitespace can be a space, tab, or new line)

string.split(delimiter) - Returns a list of substrings that were separated by whitespace or a delimiter

string.replace(old, new) - Returns a new string where all occurrences of old have been replaced by new.

delimiter.join(list of strings) - Returns a new string with all the strings joined by the delimiter 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Check out the official documentation for 
all available String methods
.  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

######
first = "apple"
second = "banana"
third = "carrot"

formatted_string = "{0} {2} {1}".format(first, second, third)

print(formatted_string)

"""Outputs:
apple carrot banana
""" 


*********Formatting expressions**************
Expr

Meaning

Example

{:d}

integer value

'{:d}'.format(10.5) → '10'

{:.2f}

floating point with that many decimals

'{:.2f}'.format(0.5) → '0.50'

{:.2s}

string with that many characters

'{:.2s}'.format('Python') → 'Py'

{:<6s}

string aligned to the left that many spaces

'{:<6s}'.format('Py') → 'Py    '

{:>6s}

string aligned to the right that many spaces

'{:>6s}'.format('Py') → '    Py'

{:^6s}

string centered in that many spaces

'{:^6s}'.format('Py') → '  Py  '  

----------------------------------------------------------------------------------------------------------------------------------------------

Knowledge
String Operations and Methods
.format() - String method that can be used to concatenate and format strings. 

{:.2f} - Within the .format() method, limits a floating point variable to 2 decimal places. The number of decimal places can be customized.

len(string) - String operation that returns the length of the string.

string[x] - String operation that accesses the character at index [x] of the string, where indexing starts at zero.

string[x:y] - String operation that accesses a substring starting at index [x] and ending at index [y-1]. If x is omitted, its value defaults to 0. If y is omitted, the value will default to len(string).

string.replace(old, new) - String method that returns a new string where all occurrences of an old substring have been replaced by a new substring.

string.lower() - String method that returns a copy of the string with all lowercase characters.

------------------------------------------------- end --------------------------------------------------------------------------------------
